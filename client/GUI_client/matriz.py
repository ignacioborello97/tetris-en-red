import pygame

matriz = [
        [
            [0, 0, '.'], [1, 0, '.'], [2, 0, '.'], [3, 0, '.'], [4, 0, '.'], [5, 0, '.'], [6, 0, '.'], [7, 0, '.'], [8, 0, '.'], [9, 0, '.']
        ], 
        [
            [0, 1, '.'], [1, 1, '.'], [2, 1, '.'], [3, 1, '.'], [4, 1, '.'], [5, 1, '.'], [6, 1, '.'], [7, 1, '.'], [8, 1, '.'], [9, 1, '.']
        ], 
        [
            [0, 2, '.'], [1, 2, '.'], [2, 2, '.'], [3, 2, '.'], [4, 2, '.'], [5, 2, '.'], [6, 2, 'L'], [7, 2, '.'], [8, 2, '.'], [9, 2, '.']
        ], 
        [
            [0, 3, '.'], [1, 3, '.'], [2, 3, '.'], [3, 3, '.'], [4, 3, '.'], [5, 3, '.'], [6, 3, 'L'], [7, 3, '.'], [8, 3, '.'], [9, 3, '.']
        ], 
        [
            [0, 4, '.'], [1, 4, '.'], [2, 4, '.'], [3, 4, '.'], [4, 4, '.'], [5, 4, '.'], [6, 4, 'L'], [7, 4, 'L'], [8, 4, '.'], [9, 4, '.']
        ], 
        [
            [0, 5, '.'], [1, 5, '.'], [2, 5, '.'], [3, 5, '.'], [4, 5, '.'], [5, 5, '.'], [6, 5, '.'], [7, 5, '.'], [8, 5, '.'], [9, 5, '.']
        ], 
        [
            [0, 6, '.'], [1, 6, '.'], [2, 6, '.'], [3, 6, '.'], [4, 6, '.'], [5, 6, '.'], [6, 6, '.'], [7, 6, '.'], [8, 6, '.'], [9, 6, '.']
        ], 
        [
            [0, 7, '.'], [1, 7, '.'], [2, 7, '.'], [3, 7, '.'], [4, 7, '.'], [5, 7, '.'], [6, 7, '.'], [7, 7, '.'], [8, 7, '.'], [9, 7, '.']
        ], 
        [
            [0, 8, '.'], [1, 8, '.'], [2, 8, '.'], [3, 8, '.'], [4, 8, '.'], [5, 8, '.'], [6, 8, '.'], [7, 8, '.'], [8, 8, '.'], [9, 8, '.']
        ], 
        [
            [0, 9, '.'], [1, 9, '.'], [2, 9, '.'], [3, 9, '.'], [4, 9, '.'], [5, 9, '.'], [6, 9, '.'], [7, 9, '.'], [8, 9, '.'], [9, 9, '.']
        ], 
        [
            [0, 10, '.'], [1, 10, '.'], [2, 10, '.'], [3, 10, '.'], [4, 10, '.'], [5, 10, '.'], [6, 10, '.'], [7, 10, '.'], [8, 10, '.'], [9, 10, '.']
        ], 
        [
            [0, 11, '.'], [1, 11, '.'], [2, 11, '.'], [3, 11, '.'], [4, 11, '.'], [5, 11, '.'], [6, 11, '.'], [7, 11, '.'], [8, 11, '.'], [9, 11, '.']
        ], 
        [
            [0, 12, '.'], [1, 12, '.'], [2, 12, '.'], [3, 12, '.'], [4, 12, '.'], [5, 12, '.'], [6, 12, '.'], [7, 12, '.'], [8, 12, '.'], [9, 12, '.']
        ], 
        [
            [0, 13, '.'], [1, 13, '.'], [2, 13, '.'], [3, 13, '.'], [4, 13, '.'], [5, 13, '.'], [6, 13, '.'], [7, 13, '.'], [8, 13, '.'], [9, 13, '.']
        ], 
        [
            [0, 14, '.'], [1, 14, '.'], [2, 14, '.'], [3, 14, '.'], [4, 14, '.'], [5, 14, '.'], [6, 14, '.'], [7, 14, '.'], [8, 14, '.'], [9, 14, '.']
        ], 
        [
            [0, 15, '.'], [1, 15, '.'], [2, 15, '.'], [3, 15, '.'], [4, 15, '.'], [5, 15, '.'], [6, 15, '.'], [7, 15, '.'], [8, 15, '.'], [9, 15, '.']
        ], 
        [
            [0, 16, '.'], [1, 16, 'J'], [2, 16, 'J'], [3, 16, '.'], [4, 16, '.'], [5, 16, '.'], [6, 16, '.'], [7, 16, '.'], [8, 16, 'S'], [9, 16, '.']
        ], 
        [
            [0, 17, '.'], [1, 17, 'J'], [2, 17, 'L'], [3, 17, '.'], [4, 17, '.'], [5, 17, 'J'], [6, 17, '.'], [7, 17, '.'], [8, 17, 'S'], [9, 17, 'S']
        ], 
        [
            [0, 18, '.'], [1, 18, 'J'], [2, 18, 'L'], [3, 18, '.'], [4, 18, 'J'], [5, 18, 'J'], [6, 18, 'J'], [7, 18, 'J'], [8, 18, 'T'], [9, 18, 'S']
        ], 
        [
            [0, 19, '.'], [1, 19, '.'], [2, 19, 'L'], [3, 19, 'L'], [4, 19, 'J'], [5, 19, 'J'], [6, 19, 'J'], [7, 19, 'T'], [8, 19, 'T'], [9, 19, 'T']
        ]
    ]



red = (255, 0, 0) 
green = (0, 255, 0) 
blue = (0, 0, 255) 
yellow = (255, 255, 0) 
light_blue = (0, 255, 255) 
fucsia = (255, 0, 255) 
purple = (128,0,128)
black = (0,0,0)
#block_size = 30

def draw_playboard(surface,matriz_server,top_left_x,top_left_y,block_size):
    
    grid = [[(0,0,0) for _ in range(10)] for _ in range(20)]

    for i in range(len(matriz_server)):
        for j in range(len(matriz_server[i])):
            for k in range(len(matriz_server[i][j])):
                if matriz_server[i][j][k] == '.':
                    grid[i][j] = black
                if matriz_server[i][j][k] == 'S':
                    grid[i][j] = red
                if matriz_server[i][j][k] == 'T':
                    grid[i][j] = fucsia
                if matriz_server[i][j][k] == 'J':
                    grid[i][j] = green
                if matriz_server[i][j][k] == 'Z':
                    grid[i][j] = light_blue
                if matriz_server[i][j][k] == 'O':
                    grid[i][j] = yellow
                if matriz_server[i][j][k] == 'I':
                    grid[i][j] = purple


    for i in range(len(matriz_server)):
            for j in range(len(matriz_server[i])):
                pygame.draw.rect(surface,grid[i][j],(top_left_x+j*block_size,top_left_y+i*block_size,block_size,block_size),0)
    

# while True:
#     surface = pygame.display.set_mode((800,700))
#     surface.fill((128,128,128))
    
#     draw_playboard(surface,matriz,250,100,30)
#     for event in pygame.event.get():
#             if event.type == pygame.QUIT:
#                 pygame.display.quit()

    
#     pygame.display.update()

